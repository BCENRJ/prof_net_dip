from vk_api.bot_longpoll import VkBotEventType
from src.vk_chat_bot.vk.manager import VKGroupManage
from src.vk_chat_bot.config import GROUP_ACCESS_TOKEN_VK, GROUP_ID, oauth_link


class VKLaunchGroup(VKGroupManage):
    def start(self):
        for event in self.long_poll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:
                user_id = event.obj['message']['peer_id']
                user_firstname = self._get_firstname(user_id)
                text_msg = event.obj['message']['text'].strip()
                print(f"New msg from {user_id}, text: {text_msg} ")

                if text_msg.lower() not in VKLaunchGroup.COMMANDS:
                    self._unknown_command(user_id, text_msg)

                user_exist = self.userapp_token.check_user(user_id)
                user_token = self.userapp_token.get_user_token(user_id)
                step = self.userapp_token.get_step(user_id)
                start = text_msg.lower() in {'start', '–Ω–∞—á–∞—Ç—å'}
                search = text_msg.lower() in {'search', '–ø–æ–∏—Å–∫'}
                next_ = text_msg.lower() in {'next', '—Å–ª–µ–¥—É—é—â–∏–π'}
                favourite = text_msg.lower() in {'–¥–æ–±. –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
                black = text_msg.lower() in {'–¥–æ–±. –≤ —á—Å'}

                if start and user_exist is False:
                    self._send_msg_sign_up(user_id, user_firstname)

                if start and user_exist and step == 0:
                    if self._acquaintance(user_id, user_firstname) and self._get_acquainted(user_id, user_token):
                        self.userapp_token.update_step(user_id, 1)

                if start and user_exist and step == 1:
                    self._send_msg(user_id, '–Ω–∞–ø–∏—à–∏—Ç–µ -> "–ø–æ–∏—Å–∫" –∏–ª–∏ "search" –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

                if (search or next_) and user_exist and step == 1:
                    self._search_or_next(user_id, user_token, user_firstname)

                if favourite and user_exist and step == 1:
                    self._move_to_fav(user_id)
                    self._send_msg(user_id, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω—ã–π —Å–ø–∏—Å–æ–∫ ‚≠ê\n–∏–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–∏—Å–∫...Ô∏è')
                    self._search_or_next(user_id, user_token, user_firstname)

                if black and user_exist and step == 1:
                    self._move_to_black(user_id)
                    self._send_msg(user_id, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ üåö\n–∏–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–∏—Å–∫...')
                    self._send_msg(user_id, '–∏–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–∏—Å–∫...')
                    self._search_or_next(user_id, user_token, user_firstname)


if __name__ == '__main__':
    test = VKLaunchGroup(GROUP_ACCESS_TOKEN_VK, GROUP_ID, oauth_link)
    test.start()
